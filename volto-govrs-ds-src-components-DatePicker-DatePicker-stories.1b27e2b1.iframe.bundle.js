"use strict";(self.webpackChunk_plone_volto=self.webpackChunk_plone_volto||[]).push([[3012],{"../../../packages/volto-govrs-ds/src/components/DatePicker/DatePicker.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DateRange:function(){return DateRange},DateTimePicker:function(){return DateTimePicker},DateTimeRange:function(){return DateTimeRange},MultipleDates:function(){return MultipleDates},Playground:function(){return Playground},SingleDate:function(){return SingleDate},TimePicker:function(){return TimePicker},WithDateRestrictions:function(){return WithDateRestrictions},WithoutMaxDate:function(){return WithoutMaxDate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return DatePicker_stories}});var esm_extends=__webpack_require__("../../../node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),esm=__webpack_require__("../../../node_modules/.pnpm/flatpickr@4.6.13/node_modules/flatpickr/dist/esm/index.js"),__jsx=(__webpack_require__("../../../node_modules/.pnpm/flatpickr@4.6.13/node_modules/flatpickr/dist/flatpickr.min.css"),react.createElement);var DatePicker=({setDateRange:setDateRange,dateRange:dateRange,mode:mode="range",enableTime:enableTime=!1,noCalendar:noCalendar=!1,maxDate:maxDate,minDate:minDate,placeholder:placeholder="Selecione o período"})=>{const dateInputRef=(0,react.useRef)(null),flatpickrRef=(0,react.useRef)(null),{0:clearDate,1:setClearDate}=(0,react.useState)(!1);(0,react.useEffect)(()=>{if(dateInputRef.current){const options={mode:mode,enableTime:enableTime,noCalendar:noCalendar,dateFormat:enableTime?noCalendar?"H:i":"d/m/Y H:i":"d/m/Y",time_24hr:!0,onChange:selectedDates=>{setDateRange([...selectedDates]),setClearDate(!0)}};void 0!==maxDate&&(options.maxDate=maxDate),void 0!==minDate&&(options.minDate=minDate);const fp=(0,esm.c)(dateInputRef.current,options);return flatpickrRef.current=fp,()=>{fp.destroy()}}},[mode,enableTime,noCalendar,maxDate,minDate,setDateRange]);return __jsx("div",{className:"date-picker-wrapper"},__jsx("input",{ref:dateInputRef,type:"text",placeholder:placeholder,className:"date-picker-input",readOnly:!0}),__jsx("div",{className:"date-picker-icons"},__jsx("svg",{className:"calendar-icon",viewBox:"0 0 24 24",width:"20",height:"20"},__jsx("path",{fill:"#1A7235",d:"M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V10h14v10zM9 14H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm-8 4H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2z"})),clearDate&&__jsx("button",{type:"button",onClick:()=>{flatpickrRef.current&&(flatpickrRef.current.clear(),setDateRange([]),setClearDate(!1))},className:"clear-button","aria-label":"Clear date"},__jsx("svg",{viewBox:"0 0 24 24",width:"20",height:"20"},__jsx("path",{fill:"#1A7235",d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"})))))},DatePicker_stories_jsx=react.createElement;var DatePicker_stories={title:"Widgets/DatePicker",component:DatePicker,parameters:{},tags:["autodocs"],argTypes:{mode:{control:"select",options:["single","range","multiple"],description:'Modo de seleção: "single" (data única), "range" (intervalo), "multiple" (múltiplas datas)',defaultValue:"range"},enableTime:{control:"boolean",description:"Habilita seleção de horário junto com a data",defaultValue:!1},noCalendar:{control:"boolean",description:"Oculta o calendário e exibe apenas o seletor de horário",defaultValue:!1},maxDate:{control:"text",description:'Data máxima selecionável (ex: "today", "2025-12-31" ou objeto Date). Se não definido, não há limite'},minDate:{control:"text",description:'Data mínima selecionável (ex: "2025-01-01" ou objeto Date)'},placeholder:{control:"text",description:"Texto de placeholder exibido no campo",defaultValue:"Selecione o período"}}};const DateDisplay=({dates:dates})=>dates&&0!==dates.length?DatePicker_stories_jsx("div",{style:{marginTop:"16px",fontSize:"14px",color:"#666"}},DatePicker_stories_jsx("strong",null,"Data",dates.length>1?"s":""," selecionada",dates.length>1?"s":"",":"),DatePicker_stories_jsx("ul",{style:{marginTop:"8px",paddingLeft:"20px"}},dates.map((date,index)=>DatePicker_stories_jsx("li",{key:index},date.toLocaleDateString("pt-BR"))))):null,Playground={args:{mode:"range",enableTime:!1,noCalendar:!1,maxDate:"today",placeholder:"Selecione o período"},render:args=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,(0,esm_extends.c)({},args,{dateRange:dateRange,setDateRange:setDateRange})),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}))},null)},DateRange={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"range",maxDate:"today"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}))},null)},SingleDate={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"single",maxDate:"today"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}))},null)},MultipleDates={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"multiple",maxDate:"today"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}),DatePicker_stories_jsx("p",{style:{marginTop:"8px",fontSize:"12px",color:"#999"}},"Segure Ctrl/Cmd para selecionar múltiplas datas"))},null)},TimePicker={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"single",enableTime:!0,noCalendar:!0,placeholder:"Selecione o horário"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}))},null)},DateTimePicker={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"single",enableTime:!0,placeholder:"Selecione data e horário"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}))},null)},DateTimeRange={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"range",enableTime:!0,placeholder:"Selecione período com horário"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}))},null)},WithoutMaxDate={render:()=>DatePicker_stories_jsx(()=>{const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"range",maxDate:void 0,placeholder:"Selecione qualquer data"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}),DatePicker_stories_jsx("p",{style:{marginTop:"8px",fontSize:"12px",color:"#999"}},"Sem restrição de data máxima - datas futuras permitidas"))},null)},WithDateRestrictions={render:()=>DatePicker_stories_jsx(()=>{const today=new Date,thirtyDaysAgo=new Date(today);thirtyDaysAgo.setDate(today.getDate()-30);const{0:dateRange,1:setDateRange}=(0,react.useState)(null);return DatePicker_stories_jsx("div",{style:{width:"400px"}},DatePicker_stories_jsx(DatePicker,{dateRange:dateRange,setDateRange:setDateRange,mode:"range",minDate:thirtyDaysAgo,maxDate:today,placeholder:"Últimos 30 dias apenas"}),DatePicker_stories_jsx(DateDisplay,{dates:dateRange}),DatePicker_stories_jsx("p",{style:{marginTop:"8px",fontSize:"12px",color:"#999"}},"Restrito aos últimos 30 dias apenas"))},null)},__namedExportsOrder=["Playground","DateRange","SingleDate","MultipleDates","TimePicker","DateTimePicker","DateTimeRange","WithoutMaxDate","WithDateRestrictions"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  args: {\n    mode: 'range',\n    enableTime: false,\n    noCalendar: false,\n    maxDate: 'today',\n    placeholder: 'Selecione o período'\n  },\n  render: args => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: '400px'\n      }}>\n          <FilterSection {...args} dateRange={dateRange} setDateRange={setDateRange} />\n          <DateDisplay dates={dateRange} />\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}",...Playground.parameters?.docs?.source}}},DateRange.parameters={...DateRange.parameters,docs:{...DateRange.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: \'400px\'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode="range" maxDate="today" />\n          <DateDisplay dates={dateRange} />\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}',...DateRange.parameters?.docs?.source}}},SingleDate.parameters={...SingleDate.parameters,docs:{...SingleDate.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: \'400px\'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode="single" maxDate="today" />\n          <DateDisplay dates={dateRange} />\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}',...SingleDate.parameters?.docs?.source}}},MultipleDates.parameters={...MultipleDates.parameters,docs:{...MultipleDates.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: '400px'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode=\"multiple\" maxDate=\"today\" />\n          <DateDisplay dates={dateRange} />\n          <p style={{\n          marginTop: '8px',\n          fontSize: '12px',\n          color: '#999'\n        }}>\n            Segure Ctrl/Cmd para selecionar múltiplas datas\n          </p>\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}",...MultipleDates.parameters?.docs?.source}}},TimePicker.parameters={...TimePicker.parameters,docs:{...TimePicker.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: \'400px\'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode="single" enableTime={true} noCalendar={true} placeholder="Selecione o horário" />\n          <DateDisplay dates={dateRange} />\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}',...TimePicker.parameters?.docs?.source}}},DateTimePicker.parameters={...DateTimePicker.parameters,docs:{...DateTimePicker.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: \'400px\'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode="single" enableTime={true} placeholder="Selecione data e horário" />\n          <DateDisplay dates={dateRange} />\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}',...DateTimePicker.parameters?.docs?.source}}},DateTimeRange.parameters={...DateTimeRange.parameters,docs:{...DateTimeRange.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: \'400px\'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode="range" enableTime={true} placeholder="Selecione período com horário" />\n          <DateDisplay dates={dateRange} />\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}',...DateTimeRange.parameters?.docs?.source}}},WithoutMaxDate.parameters={...WithoutMaxDate.parameters,docs:{...WithoutMaxDate.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const Wrapper = () => {\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: '400px'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode=\"range\" maxDate={undefined} placeholder=\"Selecione qualquer data\" />\n          <DateDisplay dates={dateRange} />\n          <p style={{\n          marginTop: '8px',\n          fontSize: '12px',\n          color: '#999'\n        }}>\n            Sem restrição de data máxima - datas futuras permitidas\n          </p>\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}",...WithoutMaxDate.parameters?.docs?.source}}},WithDateRestrictions.parameters={...WithDateRestrictions.parameters,docs:{...WithDateRestrictions.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const Wrapper = () => {\n      const today = new Date();\n      const thirtyDaysAgo = new Date(today);\n      thirtyDaysAgo.setDate(today.getDate() - 30);\n      const [dateRange, setDateRange] = useState<Date[] | null>(null);\n      return <div style={{\n        width: '400px'\n      }}>\n          <FilterSection dateRange={dateRange} setDateRange={setDateRange} mode=\"range\" minDate={thirtyDaysAgo} maxDate={today} placeholder=\"Últimos 30 dias apenas\" />\n          <DateDisplay dates={dateRange} />\n          <p style={{\n          marginTop: '8px',\n          fontSize: '12px',\n          color: '#999'\n        }}>\n            Restrito aos últimos 30 dias apenas\n          </p>\n        </div>;\n    };\n    return <Wrapper />;\n  }\n}",...WithDateRestrictions.parameters?.docs?.source}}}}}]);